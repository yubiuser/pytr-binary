name: Build and publish pytr binaries
on:
  workflow_dispatch:
  release:
    types: [published]



jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
        pytr_hash: ${{ steps.prepare.outputs.PYTR_HASH }}
    steps:
      - name: Get latest pytr commit hash
        id: prepare
        run: |
          git clone https://github.com/pytr-org/pytr.git
          cd ./pytr
          hash=$(git rev-parse --short HEAD)
          echo "PYTR_HASH=${hash}" >>  "$GITHUB_OUTPUT"

  build:
    runs-on:  ubuntu-latest
    permissions:
      contents: read
    needs: prepare
    env:
      PYTR_HASH: ${{ needs.prepare.outputs.pytr_hash }}
    strategy:
      fail-fast: true
      matrix:
        platform: [linux/arm64, linux/amd64]
    steps:
      - name: Prepare name for digest up/download
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4.2.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform }}
          outputs: type=tar,dest=pytr.${{ env.PYTR_HASH }}.${{ env.PLATFORM_PAIR }}.tar .

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.1
        with:
          name: pytr.${{ env.PYTR_HASH }}.${{ env.PLATFORM_PAIR }}
          path: pytr.*
          if-no-files-found: error
          retention-days: 1

  deploy:
    if: github.event_name == 'release'
    permissions:
      contents: write
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4.1.8
        with:
          path: /tmp/artifacts
          pattern: pytr.*
          merge-multiple: true

      - name: List
        run: ls -lha /tmp/artifacts

      - name: Attach tar to release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            /tmp/artifacts/*
